{"version":3,"sources":["reducer.js","login.js","register.js","keys.js","portfolio.js","transactions.js","navbar.js","App.js","serviceWorker.js","index.js"],"names":["defaultState","user","tickerPrice","reducer","prevState","action","type","data","leftOverMoney","Math","round","money","price","qty","stocks","length","id","tickerSymbol","ticker","fetch","method","headers","localStorage","token","Accept","body","JSON","stringify","stock_price","name","userstocks","amount","stock_id","alert","Object","keys","Login","handlelogin","e","email","target","value","password","then","r","json","error","setItem","jwt","props","handleuser","this","location","to","className","onSubmit","preventDefault","React","Component","connect","state","dispatch","Register","handleregister","required","KEY","Portfolio","stocksShown","uniqueStockIds","Map","addStock","stockTicker","has","setState","updateUniqueStocks","forEach","userstock","index","set","get","fetchNextStockData","handleCreateStock","userstockId","find","stock","resp","color","validPoints","filter","point","open","close","stockHash","handlEmptyTickerPrice","handlebuy","parseInt","min","step","minLength","map","key","toUpperCase","style","parseFloat","toFixed","size","onClick","response","catch","err","handleQty","Transactions","console","log","Navbar","signout","removeUser","handlePortfolio","handleTransaction","float","App","exact","path","render","Boolean","window","hostname","match","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a6c52b85.chunk.js","sourcesContent":["const defaultState = {\n  user: null,\n  tickerPrice: {}\n}\n\nfunction reducer(prevState = defaultState, action){\n  switch(action.type){\n    case \"USER\":\n      return {...prevState, user: action.data}\n    case \"BUY\":\n      let leftOverMoney = Math.round((prevState.user.money - (action.data.price * action.data.qty)) * 100)/100\n\n      if(leftOverMoney > 0){\n        let long = prevState.user.stocks.length\n        let tickerSymbol = action.data.ticker\n        action.data.ticker = null\n        if(!prevState.tickerPrice[tickerSymbol]){\n          fetch('http://localhost:4000/api/v1/userstocks', {\n            method: 'POST',\n            headers: {\n              \"Authorization\": localStorage.token,\n              'Content-Type': 'application/json',\n              Accept: 'application/json'\n            },\n            body: JSON.stringify({\n              ticker: tickerSymbol,\n              money: leftOverMoney,\n              qty: action.data.qty,\n              stock_price: action.data.price\n            })\n          })\n          let id;\n          if(!prevState.user.stocks[0]){\n           id = 5000\n          }else{\n           id = prevState.user.stocks[prevState.user.stocks.length-1].id + 1\n          }\n\n          return {...prevState,\n            user: {\n              ...prevState.user,\n              money: leftOverMoney,\n              stocks: [\n                ...prevState.user.stocks,\n\n                  {\n                    name:action.data.ticker,\n                    id: id\n                  }\n\n              ],\n              userstocks:[\n                ...prevState.user.userstocks,\n                {\n                    amount:action.data.qty,\n                    stock_id: id,\n                    money: action.data.price\n\n                }\n              ]\n            },\n            tickerPrice:{\n              ...prevState.tickerPrice,\n              [tickerSymbol]:action.data\n            }\n          }\n        }else{\n          fetch('http://localhost:4000/api/v1/userstocks/', {\n            method: 'POST',\n            headers: {\n              \"Authorization\": localStorage.token,\n              'Content-Type': 'application/json',\n              Accept: 'application/json'\n            },\n            body: JSON.stringify({\n              ticker: tickerSymbol,\n              money: leftOverMoney,\n              qty: action.data.qty,\n              stock_price: action.data.price\n            })\n          })\n          return {...prevState,\n            user: {\n              ...prevState.user,\n              money: leftOverMoney,\n              stocks: [\n                ...prevState.user.stocks,\n                {\n                  name:action.data.ticker\n                }\n              ],\n              userstocks:[\n                ...prevState.user.userstocks,\n                { amount:action.data.qty}\n              ]\n            },\n            tickerPrice:{\n              ...prevState.tickerPrice,\n              [tickerSymbol]:{\n                ...prevState.tickerPrice[tickerSymbol],\n                qty: prevState.tickerPrice[tickerSymbol].qty + action.data.qty\n              }\n            }\n          }\n        }\n      }else{\n        alert(\"not enought money\")\n      }\n    case \"CREATESTOCK\":\n      let tickerSymbol = Object.keys(action.data)[0]\n      if (prevState.tickerPrice[tickerSymbol]){\n        let qty = prevState.tickerPrice[tickerSymbol].qty + action.data[tickerSymbol].qty\n        return {...prevState, tickerPrice: {...prevState.tickerPrice, ...action.data, [tickerSymbol]:{...prevState.tickerPrice[tickerSymbol],qty:qty}}}\n      }else{\n        return {...prevState, tickerPrice: {...prevState.tickerPrice, ...action.data}}\n      }\n    case \"SIGNOUT\":\n      return defaultState\n    case \"EmptyTickerPrice\":\n      return {...prevState, tickerPrice: {}}\n    default:\n      return prevState\n  }\n\n}\n\nexport default reducer\n","import React from 'react';\nimport { Route, Switch, Redirect, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\"\nimport \"./login.css\"\n\n\nclass Login extends React.Component {\n\n  handlelogin = (e) => {\n    let email = e.target[0].value\n    let password = e.target[1].value\n    fetch(`http://localhost:4000/api/v1/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      }),\n    })\n    .then(r=>r.json())\n    .then(data=> {\n      if(data.error){\n        alert(data.error)\n      }else{\n        localStorage.setItem(\"token\",data.jwt)\n        this.props.handleuser(data.user)\n      }\n    })\n  }\n\n  render(){\n    const { user, location } = this.props\n    if (user){\n      return(\n        <Redirect to=\"/portfolio\" />\n      )\n    } else {\n      return (\n        <div className=\"login\">\n          <form onSubmit={(e)=>{\n              e.preventDefault();\n              this.handlelogin(e)\n            }}>\n            <h1 className=\"center\" >Sign in</h1>\n            <label className=\"center\">\n              E-mail:\n              <input type=\"text\" name=\"email\"/>\n            </label>\n            <br/>\n            <label className=\"center\" >\n              password:\n              <input type=\"text\" name=\"password\"/>\n            </label>\n            <br/>\n            <input className=\"center\" type=\"submit\" value=\"Sign in\" />\n          </form>\n        </div>\n      );\n    }\n  }\n}\n\n\nfunction msp(state){\n  return{\n    user: state.user\n  }\n}\n\nfunction mdp(dispatch){\n  return{\n    handleuser: (user) => {\n      dispatch({type: \"USER\", data: user})\n    }\n  }\n}\n\nexport default connect(msp,mdp)(Login);\n","import React from 'react';\nimport { Route, Switch, Redirect, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\"\nimport \"./register.css\"\n\n\nclass Register extends React.Component {\n\n  handleregister = (e) => {\n    let name = e.target[0].value\n    let email = e.target[1].value\n    let password = e.target[2].value\n\n    fetch('http://localhost:4000/api/v1/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          name: name,\n          password: password,\n          email: email,\n          money: 5000.00\n        }\n      })\n    })\n    .then(r => r.json())\n    .then( data =>{\n      if(data.error){\n        alert(data.error)\n      }else{\n        localStorage.setItem(\"token\",data.jwt)\n        this.props.handleuser(data.user)\n      }\n    })\n  }\n\n\n  render(){\n    if (this.props.user){\n      return(\n        <Redirect to=\"/portfolio\" />\n      )\n    }else {\n      return (\n        <div className=\"register\">\n          <form onSubmit={(e)=>{\n              e.preventDefault();\n              this.handleregister(e);\n            }}>\n            <h1 className=\"center\">Register</h1>\n            <label className=\"center\" >\n              Name:\n              <input type=\"text\" name=\"name\" required/>\n            </label >\n            <br/>\n            <label className=\"center\" >\n              E-mail:\n              <input type=\"email\" name=\"email\" required/>\n            </label>\n            <br/>\n            <label className=\"center\" >\n              password:\n              <input type=\"password\" name=\"password\" required/>\n            </label>\n            <input className=\"center\" type=\"submit\" value=\"Register\" />\n          </form>\n        </div>\n      );\n    }\n  }\n}\n\nfunction msp(state){\n  return{\n    user: state.user\n  }\n}\n\nfunction mdp(dispatch){\n  return{\n    handleuser: (user) => {\n    dispatch({type: \"USER\", data: user})\n    }\n  }\n}\n\nexport default connect(msp,mdp)(Register);\n","export const KEY = \"pk_ade36e087b854be0bb67dd3751460d25\"\n","import React from 'react';\nimport { Route, Switch, Redirect, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\"\nimport \"./portfolio.css\"\nimport { KEY } from \"./keys.js\"\n\nclass Portfolio extends React.Component {\n  state = {\n    stocksShown: 0,\n    uniqueStockIds: new Map()\n  }\n\n  componentDidMount() {\n    this.props.handlEmptyTickerPrice()\n    this.fetchNextStockData()\n  }\n\n  addStock = (stockTicker) => {\n    this.state.uniqueStockIds.has(stockTicker) &&\n    this.setState({\n      stocksShown: this.state.stocksShown + 1\n    })\n  }\n\n  updateUniqueStocks = () => {\n    if (this.props.user) {\n    const {\n      userstocks = {},\n      stocks = {}\n    } = this.props.user\n    const uniqueStockIds = new Map()\n    userstocks.forEach((userstock, index) => {\n            let id = userstock.stock_id\n            if (uniqueStockIds.has(id)) {\n              uniqueStockIds.set(id, uniqueStockIds.get(id) + userstock.amount)\n            } else {\n              uniqueStockIds.set(id, userstock.amount)\n            }\n          })\n    this.setState({\n      uniqueStockIds\n    })\n    return uniqueStockIds;\n    }\n  }\n\n  fetchNextStockData = () => {\n    const { user, handleCreateStock } = this.props\n    const { stocksShown } = this.state\n    if (user) {\n      const {\n        userstocks = {},\n        stocks = {}\n      } = user\n\n      const uniqueStockIds = this.updateUniqueStocks()\n\n      let index = 0\n      uniqueStockIds.forEach((qty, userstockId) => {\n        if (index >= stocksShown && index < stocksShown + 3) {\n          const name = stocks.find(stock => stock.id === userstockId).name\n          fetch(`https://cloud.iexapis.com/stable/stock/${name}/intraday-prices?token=${KEY}`)\n          .then((resp) => resp.json())\n          .then((data) => {\n            let validPoints = data.filter(point => {\n               return point.open != null\n            })\n             let open = validPoints[0].open\n             let value = validPoints[validPoints.length-1].close\n             let color;\n             if (open > value){\n               color = \"red\"\n             }else if (open == value) {\n               color = \"gray\"\n             }else{\n               color = \"green\"\n             }\n             let stockHash = {}\n              stockHash[name] = {qty: qty, price: value, color: color}\n             handleCreateStock(stockHash)\n          })\n        }\n        index++\n      })\n      this.setState({\n        stocksShown: stocksShown + 3\n      })\n    }\n\n  }\n\n  render(){\n\n    const { tickerPrice, user, handlebuy } = this.props\n    const { uniqueStockIds, stocksShown } = this.state\n\n    if (user) {\n      return (\n        <div className=\"portfolio\">\n          <div>\n            <h1>porfolio</h1>\n              Cash:${user.money}\n              <form onSubmit={(e)=>{\n                  e.preventDefault();\n                  handlebuy(e.target[0].value, parseInt(e.target[1].value), this.addStock)\n              }}>\n                <label>\n                  Ticker:\n                  <input type=\"text\" name=\"ticker\" required/>\n                </label>\n                <br/>\n                <label>\n                  QTY:\n                  <input type=\"number\" min =\"1\" step=\"1\" name=\"qty\" required minLength=\"1\"/>\n                </label>\n                <br/>\n                <input type=\"submit\" value=\"Buy\" />\n              </form>\n          </div>\n            {\n              Object.keys(tickerPrice).length > 0 && Object.keys(tickerPrice).map(name => {\n                return (\n                  <div key={name}>\n                    <p>{name.toUpperCase()}</p>\n                    <p>QTY:{tickerPrice[name].qty}</p>\n                    <p style={{color: tickerPrice[name].color}}>\n                      ${parseFloat(tickerPrice[name].price * tickerPrice[name].qty).toFixed(2)}\n                    </p>\n                  </div>\n                )\n              })\n            }\n            {\n              stocksShown < uniqueStockIds.size && (\n                <button onClick={this.fetchNextStockData}>Show more</button>\n              )\n            }\n        </div>\n      );\n    }\n    else{\n      return(\n        <Redirect to=\"/login\" />\n      )\n    }\n  }\n}\n\nfunction msp(state){\n  return{\n    user: state.user,\n    tickerPrice: state.tickerPrice\n  }\n}\n\nfunction mdp(dispatch){\n  return{\n    handlebuy: (ticker, qty, addStock) => {\n\n      fetch(`https://cloud.iexapis.com/stable/stock/${ticker}/intraday-prices?token=${KEY}`)\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        let validPoints = data.filter(point => {\n           return point.open != null\n        })\n         let open = validPoints[0].open\n         let price = validPoints[validPoints.length-1].close\n         let color;\n         if (open > price){\n           color = \"red\"\n         }else if (open == price) {\n           color = \"gray\"\n         }else{\n           color = \"green\"\n         }\n         addStock && addStock()\n        dispatch({type: \"BUY\", data: {ticker, price, qty, color}})\n      })\n      .catch((err) => {\n        alert(\"Please input valid ticker\");\n      });\n    },\n\n    handleCreateStock: (stockHash) =>{\n      dispatch({type: \"CREATESTOCK\", data: stockHash})\n    },\n    handleQty: (name,qty) =>{\n      dispatch({type: \"QTY\", data: {name, qty}})\n    },\n    handlEmptyTickerPrice: () =>{\n      dispatch({type: \"EmptyTickerPrice\"})\n    },\n  }\n}\n\nexport default connect(msp,mdp)(Portfolio);\n","import React from 'react';\nimport { Route, Switch, Redirect, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\"\nimport \"./transactions.css\"\n\nclass Transactions extends React.Component {\n\n  render(){\n\n    if (!this.props.user) {\n      return (\n        <Redirect to=\"/login\" />\n      )\n    }\n\n    console.log(this.props.user);\n    return (\n      <div className=\"transactions\">\n        <h1>transactions</h1>\n          {\n            this.props.user != null && this.props.user.userstocks.map(userstock => {\n              let name = this.props.user.stocks.find(stock => stock.id == userstock.stock_id).name\n              return (\n                <div key={userstock.id}>\n                  <p>BUY {name} --- {userstock.amount} share(s) @ ${userstock.money}</p>\n                </div>\n              )\n            })\n          }\n      </div>\n    );\n  }\n}\n\nfunction msp(state){\n  return{\n    user: state.user,\n    tickerPrice: state.tickerPrice\n  }\n}\n\nfunction mdp(dispatch){\n  return{\n  }\n}\n\nexport default connect(msp,mdp)(Transactions);\n","import React from 'react';\nimport { Route, Switch, Redirect, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\"\nimport './navbar.css';\n\n\nclass Navbar extends React.Component {\n  signout = () => {\n    localStorage.token = null;\n    this.props.removeUser();\n  }\n\n  handlePortfolio = () =>{\n    if (!this.props.user){\n      alert(\"Please sign in to view your protfolio\")\n    }\n  }\n  handleTransaction = () =>{\n    if (!this.props.user){\n      alert(\"Please sign in to view your transactions\")\n    }\n  }\n\n  render(){\n    return(\n      <ul>\n      <li><Link to=\"/portfolio\" onClick={this.handlePortfolio} >Portfolio</Link></li>\n      <li><Link to=\"/transactions\" onClick={this.handleTransaction}>Transactions</Link></li>\n\n      {\n        this.props.user\n          ? <li style={{float:\"right\"}}>\n              <Link to=\"/login\" onClick={() => this.signout() }>\n                Sign Out\n              </Link>\n            </li>\n        : (\n          <>\n            <li style={{float:\"right\"}}><Link to=\"/login\" >Sign In</Link></li>\n            <li style={{float:\"right\"}}><Link to=\"/register\">Register</Link></li>\n          </>\n        )\n      }\n    </ul>\n    )\n  }\n}\n\n\nfunction msp(state){\n  return{\n    user: state.user\n  }\n}\n\nfunction mdp(dispatch){\n  return {\n    removeUser: () =>{\n      dispatch({ type: \"SIGNOUT\" })\n    }\n  }\n}\n\nexport default connect(msp,mdp)(Navbar);\n","import React from 'react';\nimport { Route, Switch, Redirect, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\"\nimport './App.css';\nimport Login from './login.js';\nimport Register from './register.js';\nimport Portfolio from './portfolio.js';\nimport Transactions from './transactions.js';\nimport Navbar from \"./navbar.js\";\n\nclass App extends React.Component {\n\n  // #key: PGCTGCH5CPIW97F9\n  componentDidMount(){\n    const token = localStorage.token\n    if(token){\n      fetch(\"http://localhost:4000/api/v1/profile\",{\n        headers: {\n          \"Authorization\": token\n        }\n      })\n      .then(r => r.json())\n      .then(data => {\n        this.props.handleuser(data.user)\n      })\n    }\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Navbar/>\n        <Switch>\n            <Route exact path=\"/login\" render={()=><Login/>} />\n            <Route exact path=\"/register\" render={()=><Register/>} />\n            <Route exact path=\"/portfolio\" render={()=><Portfolio/>} />\n            <Route exact path=\"/transactions\" render={()=><Transactions/>} />\n          </Switch>\n      </div>\n    );\n  }\n}\n\nfunction msp(state){\n  return{\n    user: state.user\n  }\n}\n\nfunction mdp(dispatch){\n  return{\n    handleuser: (user) => {\n    dispatch({type: \"USER\", data: user})\n    }\n  }\n}\n\nexport default connect(msp,mdp)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { createStore } from \"redux\";\nimport reducer from \"./reducer.js\";\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter} from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}