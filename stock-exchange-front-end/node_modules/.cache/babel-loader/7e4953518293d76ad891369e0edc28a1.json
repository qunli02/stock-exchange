{"ast":null,"code":"import _objectSpread from \"/Users/flatironschool/Desktop/Qun/project/stock-exchange/stock-exchange-front-end/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nconst defaultState = {\n  user: null\n};\n\nfunction reducer(prevState = defaultState, action) {\n  switch (action.type) {\n    case \"USER\":\n      return _objectSpread({}, prevState, {\n        user: action.data.user\n      });\n\n    case \"BUY\":\n      let leftOverMoney = Math.round((prevState.user.money - action.data.value * action.data.qty) * 100) / 100;\n      fetch('http://localhost:4000/api/v1/userstocks', {\n        method: 'POST',\n        headers: {\n          \"Authorization\": localStorage.token,\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          ticker: action.data.ticker,\n          money: leftOverMoney,\n          user_id: prevState.user.id\n        })\n      });\n\n      if (leftOverMoney > 0) {\n        return _objectSpread({}, prevState, {\n          user: _objectSpread({}, prevState.user, {\n            money: leftOverMoney\n          })\n        });\n      } else {\n        alert(\"not enought money\");\n      }\n\n    default:\n      return prevState;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Qun/project/stock-exchange/stock-exchange-front-end/src/reducer.js"],"names":["defaultState","user","reducer","prevState","action","type","data","leftOverMoney","Math","round","money","value","qty","fetch","method","headers","localStorage","token","Accept","body","JSON","stringify","ticker","user_id","id","alert"],"mappings":";AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAC;AADc,CAArB;;AAIA,SAASC,OAAT,CAAiBC,SAAS,GAAGH,YAA7B,EAA2CI,MAA3C,EAAkD;AAChD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,MAAL;AACE,+BAAWF,SAAX;AAAsBF,QAAAA,IAAI,EAAEG,MAAM,CAACE,IAAP,CAAYL;AAAxC;;AACA,SAAK,KAAL;AACE,UAAIM,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACN,SAAS,CAACF,IAAV,CAAeS,KAAf,GAAwBN,MAAM,CAACE,IAAP,CAAYK,KAAZ,GAAoBP,MAAM,CAACE,IAAP,CAAYM,GAAzD,IAAiE,GAA5E,IAAiF,GAArG;AACAC,MAAAA,KAAK,CAAC,yCAAD,EAA4C;AAC/CC,QAAAA,MAAM,EAAE,MADuC;AAE/CC,QAAAA,OAAO,EAAE;AACP,2BAAiBC,YAAY,CAACC,KADvB;AAEP,0BAAgB,kBAFT;AAGPC,UAAAA,MAAM,EAAE;AAHD,SAFsC;AAO/CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,MAAM,EAAElB,MAAM,CAACE,IAAP,CAAYgB,MADD;AAEnBZ,UAAAA,KAAK,EAAEH,aAFY;AAGnBgB,UAAAA,OAAO,EAAEpB,SAAS,CAACF,IAAV,CAAeuB;AAHL,SAAf;AAPyC,OAA5C,CAAL;;AAaA,UAAGjB,aAAa,GAAG,CAAnB,EAAqB;AACnB,iCAAWJ,SAAX;AAAsBF,UAAAA,IAAI,oBAAME,SAAS,CAACF,IAAhB;AAAsBS,YAAAA,KAAK,EAACH;AAA5B;AAA1B;AACD,OAFD,MAEK;AACHkB,QAAAA,KAAK,CAAC,mBAAD,CAAL;AACD;;AACL;AACE,aAAOtB,SAAP;AAxBJ;AA2BD;;AAED,eAAeD,OAAf","sourcesContent":["const defaultState = {\n  user:null,\n  }\n\nfunction reducer(prevState = defaultState, action){\n  switch(action.type){\n    case \"USER\":\n      return {...prevState, user: action.data.user}\n      case \"BUY\":\n        let leftOverMoney = Math.round((prevState.user.money - (action.data.value * action.data.qty)) * 100)/100\n        fetch('http://localhost:4000/api/v1/userstocks', {\n          method: 'POST',\n          headers: {\n            \"Authorization\": localStorage.token,\n            'Content-Type': 'application/json',\n            Accept: 'application/json'\n          },\n          body: JSON.stringify({\n            ticker: action.data.ticker,\n            money: leftOverMoney,\n            user_id: prevState.user.id\n          })\n        })\n        if(leftOverMoney > 0){\n          return {...prevState, user: {...prevState.user, money:leftOverMoney}}\n        }else{\n          alert(\"not enought money\")\n        }\n    default:\n      return prevState\n  }\n\n}\n\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}