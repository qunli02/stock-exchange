{"ast":null,"code":"import _objectSpread from \"/Users/flatironschool/Desktop/Qun/project/stock-exchange/stock-exchange-front-end/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nconst defaultState = {\n  user: null\n};\n\nfunction reducer(prevState = defaultState, action) {\n  switch (action.type) {\n    case \"USER\":\n      return _objectSpread({}, prevState, {\n        user: action.data\n      });\n\n    case \"BUY\":\n      let leftOverMoney = Math.round((prevState.user.money - action.data.value * action.data.qty) * 100) / 100;\n\n      if (leftOverMoney > 0) {\n        fetch('http://localhost:4000/api/v1/userstocks', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            \"Authorization\": localStorage.token\n          },\n          body: JSON.stringify({\n            ticker: action.data.ticker,\n            money: leftOverMoney,\n            qty: action.data.qty\n          })\n        }).then(r => r.json()).then(data => {\n          return _objectSpread({}, prevState, {\n            user: data.user\n          });\n        });\n      } else {\n        alert(\"not enought money\");\n      }\n\n    default:\n      return prevState;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Qun/project/stock-exchange/stock-exchange-front-end/src/reducer.js"],"names":["defaultState","user","reducer","prevState","action","type","data","leftOverMoney","Math","round","money","value","qty","fetch","method","headers","Accept","localStorage","token","body","JSON","stringify","ticker","then","r","json","alert"],"mappings":";AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAC;AADc,CAArB;;AAIA,SAASC,OAAT,CAAiBC,SAAS,GAAGH,YAA7B,EAA2CI,MAA3C,EAAkD;AAChD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,MAAL;AACE,+BAAWF,SAAX;AAAsBF,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAAnC;;AACF,SAAK,KAAL;AACE,UAAIC,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACN,SAAS,CAACF,IAAV,CAAeS,KAAf,GAAwBN,MAAM,CAACE,IAAP,CAAYK,KAAZ,GAAoBP,MAAM,CAACE,IAAP,CAAYM,GAAzD,IAAiE,GAA5E,IAAiF,GAArG;;AACA,UAAGL,aAAa,GAAG,CAAnB,EAAqB;AACnBM,QAAAA,KAAK,CAAC,yCAAD,EAA4C;AAC/CC,UAAAA,MAAM,EAAE,MADuC;AAE/CC,UAAAA,OAAO,EAAE;AACP,4BAAgB,kBADT;AAEPC,YAAAA,MAAM,EAAE,kBAFD;AAGP,6BAAiBC,YAAY,CAACC;AAHvB,WAFsC;AAO/CC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,YAAAA,MAAM,EAAElB,MAAM,CAACE,IAAP,CAAYgB,MADD;AAEnBZ,YAAAA,KAAK,EAAEH,aAFY;AAGnBK,YAAAA,GAAG,EAAER,MAAM,CAACE,IAAP,CAAYM;AAHE,WAAf;AAPyC,SAA5C,CAAL,CAaCW,IAbD,CAaMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAbX,EAcCF,IAdD,CAcMjB,IAAI,IAAI;AACZ,mCAAWH,SAAX;AAAsBF,YAAAA,IAAI,EAAEK,IAAI,CAACL;AAAjC;AACD,SAhBD;AAiBD,OAlBD,MAkBK;AACHyB,QAAAA,KAAK,CAAC,mBAAD,CAAL;AACD;;AACH;AACE,aAAOvB,SAAP;AA3BJ;AA8BD;;AAED,eAAeD,OAAf","sourcesContent":["const defaultState = {\n  user:null,\n  }\n\nfunction reducer(prevState = defaultState, action){\n  switch(action.type){\n    case \"USER\":\n      return {...prevState, user: action.data}\n    case \"BUY\":\n      let leftOverMoney = Math.round((prevState.user.money - (action.data.value * action.data.qty)) * 100)/100\n      if(leftOverMoney > 0){\n        fetch('http://localhost:4000/api/v1/userstocks', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            \"Authorization\": localStorage.token\n          },\n          body: JSON.stringify({\n            ticker: action.data.ticker,\n            money: leftOverMoney,\n            qty: action.data.qty\n          })\n        })\n        .then(r => r.json())\n        .then(data => {\n          return {...prevState, user: data.user}\n        })\n      }else{\n        alert(\"not enought money\")\n      }\n    default:\n      return prevState\n  }\n\n}\n\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}